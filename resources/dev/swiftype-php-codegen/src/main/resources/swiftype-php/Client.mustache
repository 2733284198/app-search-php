<?php
/**
 * This file is part of the Swiftype App Search PHP Client package.
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace {{invokerPackage}};

/**
 * Client implementation.
 *
 * @package Swiftype\AppSearch
 * @author  AurÃ©lien FOUCRET <aurelien.foucret@elastic.co>
 */
class Client
{
    /**
    * @var Connections\Connection
    */
    private $connection;

    /**
     * @var callable
     */
    private $endpoint;

    public function __construct(callable $endpointBuilder, Connection\Connection $connection)
    {
        $this->endpointBuilder = $endpointBuilder;
        $this->connection      = $connection;
    }

{{#apiInfo}}{{#apis}}{{#operations}}{{#operation}}
    public function {{operationId}}({{#allParams}}${{paramName}}{{#hasMore}}, {{/hasMore}}{{/allParams}})
    {
        {{#allParams.0}}
        $params = [
            {{#pathParams}}
            '{{baseName}}' => ${{paramName}},
            {{/pathParams}}
            {{#queryParams}}
            '{{baseName}}' => ${{paramName}},
            {{/queryParams}}
        ];
        {{/allParams.0}}

        $endpoint = ($this->endpointBuilder)('{{classname}}');
        {{#allParams.0}}
        $endpoint->setParams($params);
        {{/allParams.0}}
        {{#bodyParams.0}}
        $endpoint->setBody($body);
        {{/bodyParams.0}}

        return $this->performRequest($endpoint);
    }
{{/operation}}{{/operations}}{{/apis}}{{/apiInfo}}
    private function performRequest(Endpoint\EndpointInterface $endpoint)
    {
        $method  = $endpoint->getMethod();
        $uri     = $endpoint->getURI();
        $params  = $endpoint->getParams();
        $body    = $endpoint->getBody();

        return $this->connection->performRequest($method, $uri, $params, $body)->wait();
    }
}
