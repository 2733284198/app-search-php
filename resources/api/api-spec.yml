openapi: 3.0.2

info:
  title: "Swiftype App Search API"
  description: "Swiftype App Search API"
  version: "1.0"

components:

  # Reusable schemas definitions -----------------------------------------------
  schemas:
    simpleObject:
      type: object

    pageListParams:
      type: object
      properties:
        current:
          type: integer
        size:
          type: integer

    listParams:
      type: object
      properties:
        page:
          $ref: "#/components/schemas/pageListParams"

    pageListMeta:
      allOf:
      - $ref: "#/components/schemas/pageListParams"
      - type: object
        properties:
          total_results:
            type: integer
          total_pages:
            type: integer

    listMeta:
      type: object
      properties:
        page:
          $ref: "#/components/schemas/pageListMeta"

    engine:
      type: object
      required:
      - name
      additionalProperties: false
      properties:
        name:
          type: string
        language:
          type: string

    engineList:
      type: array
      items:
        $ref: "#/components/schemas/engine"

    engineListResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/pageListMeta"
        results:
          $ref: "#/components/schemas/engineList"

    documentFieldValue:
      anyOf:
      - type: string
      - type: number
      - type: array
        items:
          anyOf:
          - type: string
          - type: number

    document:
      type: object
      properties:
        id:
          type: string
      additionalProperties:
        $ref: "#/components/schemas/documentFieldValue"

    documentList:
      type: array
      items:
        $ref: "#/components/schemas/document"

    documentIds:
      type: array
      items:
        type: string

    documentListResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/pageListMeta"
        results:
          $ref: "#/components/schemas/documentList"

    documentsIndexingResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          errors:
            type: array
            items:
              type: string

    documentsDeleteResponse:
      type: array
      items:
        type: object
        properties:
          id:
            type: string
          deleted:
            type: boolean

    searchSimpleFilterValue:
      anyOf:
      - type: string
      - type: number

    searchFilterValue:
      anyOf:
      - $ref: "#/components/schemas/searchSimpleFilterValue"
      - type: array
        items:
          $ref: "#/components/schemas/searchSimpleFilterValue"
      - type: object
        additionalProperties: false
        minProperties: 1
        properties:
          from:
            $ref: "#/components/schemas/searchSimpleFilterValue"
          to:
            $ref: "#/components/schemas/searchSimpleFilterValue"
      - type: object
        additionalProperties: false
        minProperties: 1
        properties:
          center:
            type: string
          distance:
            type: number
          unit:
            type: string

    searchFilterList:
      type: array
      items:
        $ref: "#/components/schemas/searchFilters"

    searchFilters:
      type: object
      minProperties: 1
      maxProperties: 1
      properties:
        any:
          $ref: "#/components/schemas/searchFilterList"
        all:
          $ref: "#/components/schemas/searchFilterList"
        none:
          $ref: "#/components/schemas/searchFilterList"
      additionalProperties:
        $ref: "#/components/schemas/searchFilters"

    searchFields:
      type: object
      additionalProperties:
        type: object
        additionalProperties: false
        properties:
          weight:
            type: integer

    searchResultFields:
      type: array
      items:
        type: object
        properties:
          raw:
            type: object
            properties:
              size:
                type: integer
          snippet:
            type: object
            properties:
              size:
                type: integer
              fallback:
                type: boolean

    searchSimpleSortOrder:
      type: object
      minProperties: 1
      maxProperties: 1
      additionalProperties:
        type: string
        enum: ['asc', 'desc']

    searchSortOrder:
      anyOf:
      - $ref: "#/components/schemas/searchSimpleSortOrder"
      - type: array
        items:
          $ref: "#/components/schemas/searchSimpleSortOrder"

    searchValueFacetParams:
      type: object
      additionalProperties: false
      required:
      - type
      properties:
        type:
          type: string
        size:
          type: integer
        sort:
          $ref: "#/components/schemas/searchSimpleSortOrder"

    searchRangeFacetParams:
      type: object
      additionalProperties: false
      required:
      - type
      properties:
        type:
          type: string
        ranges:
          type: array
          items:
            type: object
            properties:
              from:
                $ref: "#/components/schemas/searchSimpleFilterValue"
              to:
                $ref: "#/components/schemas/searchSimpleFilterValue"
              name:
                type: string

    searchGeoRangeFacetParams:
      type: object
      additionalProperties: false
      required:
      - type
      - center
      - unit
      properties:
        type:
          type: string
        center:
          type: string
        unit:
          type: string
        ranges:
          type: array
          items:
            type: object
            properties:
              from:
                $ref: "#/components/schemas/searchSimpleFilterValue"
              to:
                $ref: "#/components/schemas/searchSimpleFilterValue"
              name:
                type: string

    searchFacetParams:
      anyOf:
      - $ref: "#/components/schemas/searchValueFacetParams"
      - $ref: "#/components/schemas/searchRangeFacetParams"
      - $ref: "#/components/schemas/searchGeoRangeFacetParams"

    searchFacets:
      type: object
      additionalProperties:
        type: array
        items:
          $ref: "#/components/schemas/searchFacetParams"

    searchBoostParams:
      anyOf:
      - type: object
        additionalProperties: false
        properties:
          type:
            type: string
          value:
            anyOf:
            - $ref: "#/components/schemas/searchSimpleFilterValue"
            - type: array
              items:
                $ref: "#/components/schemas/searchSimpleFilterValue"
          operation:
            type: string
          factor:
            type: number
      - type: object
        additionalProperties: false
        properties:
          type:
            type: string
          function:
            type: string
          operation:
            type: string
          factor:
            type: number
      - type: object
        additionalProperties: false
        properties:
          type:
            type: string
          center:
            type: string
          operation:
            type: string
          factor:
            type: number

    searchBoosts:
      type: object
      additionalProperties:
        anyOf:
        - $ref: "#/components/schemas/searchBoostParams"
        - type: array
          items:
            $ref: "#/components/schemas/searchBoostParams"

    searchGroup:
      type: object
      required:
      - field
      properties:
        field:
          type: string
        size:
          type: integer
        sort:
          $ref: "#/components/schemas/searchSimpleSortOrder"

    searchRequest:
      type: object
      additionalProperties: false
      required:
      - query
      properties:
        query:
          type: string
        page:
          $ref: "#/components/schemas/pageListParams"
        filters:
          $ref: "#/components/schemas/searchFilters"
        facets:
          $ref: "#/components/schemas/searchFacets"
        search_fields:
          $ref: "#/components/schemas/searchFields"
        boost:
          $ref: "#/components/schemas/searchBoosts"
        result_fields:
          $ref: "#/components/schemas/searchResultFields"
        sort:
          $ref: "#/components/schemas/searchSortOrder"
        group:
          $ref: "#/components/schemas/searchGroup"
        analytics:
          type: object
          properties:
            tags:
              type: array
              items:
                type: string

    searchResponse:
      type: object
      # TODO

    schemaData:
      type: object
      additionalProperties:
        type: string

    searchSettings:
      type: object
      additionalProperties: false
      properties:
        search_fields:
          $ref: "#/components/schemas/searchFields"
        boosts:
          $ref: "#/components/schemas/searchBoosts"

    synonymSetData:
      type: object
      additionalProperties: false
      required:
      - synonyms
      properties:
        synonyms:
          type: array
          items:
            type: string

    synonymSet:
      allOf:
      - $ref: "#/components/schemas/synonymSetData"
      - type: object
        properties:
          id:
            type: string

    synonymSetList:
      type: array
      items:
        $ref: "#/components/schemas/synonymSet"

    synonymSetListResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/pageListMeta"
        results:
          $ref: "#/components/schemas/documentList"

    curationData:
      allOf:
      - type: object
        required:
        - queries
        properties:
          queries:
            type: array
            items:
              type: string
      - anyOf:
        - type: object
          required: [promoted]
          properties:
            promoted:
              $ref: "#/components/schemas/documentIds"
        - type: object
          required: [hidden]
          properties:
            hidden:
              $ref: "#/components/schemas/documentIds"

    curation:
      allOf:
      - type: object
        properties:
          id:
            type: string
      - $ref: "#/components/schemas/curationData"

    curationList:
      type: array
      items:
        $ref: "#/components/schemas/curation"

    curationResponse:
      type: object
      properties:
        meta:
          $ref: "#/components/schemas/pageListMeta"
        results:
          $ref: "#/components/schemas/curationList"

    clickData:
      type: object
      additionalProperties: false
      required:
      - query
      - document_id
      properties:
        query:
          type: string
        document_id:
          type: string
        request_id:
          type: string
        tags:
          type: array
          items:
            type: string

  # Reusable parameters definitions --------------------------------------------
  parameters:
    engineNameParam:
      name: engine_name
      in: path
      description: Name of the engine.
      required: true
      schema:
        type: string

    synonymSetId:
      name: synonym_set_id
      in: path
      description: Synonym set id.
      required: true
      schema:
        type: string

    curationId:
      name: curation_id
      in: path
      description: Curation id.
      required: true
      schema:
        type: string

  # Reusable request bodies ----------------------------------------------------
  requestBodies:
    listParamsRequest:
      description: TODO
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/listParams"

    engineRequest:
      required: true
      description: TODO
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/engine"

    documentIdsRequest:
      required: true
      description: TODO
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentIds"

    documentListRequest :
      required: true
      description: TODO
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentList"

    searchRequest:
      required: true
      description: TODO
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/searchRequest"

    schemaRequest:
      required: true
      description: TODO
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/schemaData"

    searchSettingsRequest:
      required: true
      description: TODO
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/searchSettings"

    synonymSetRequest:
      required: true
      description: TODO
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/synonymSetData"

    curationRequest:
      required: true
      description: TODO
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/curationData"

    clickRequest:
      required: true
      description: TODO
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/clickData"

  # Cross API reusable response bodies -----------------------------------------
  responses:
    jsonResponse:
      description: A simple JSON response.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/simpleObject"

    engineListResponse:
      description: List of available engines.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/engineListResponse"

    engineResponse:
      description: Engine data.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/engine"

    documentListResponse:
      description: "Document list."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentListResponse"

    searchResponse:
      description: "Search response."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/searchResponse"

    documentsIndexingResponse:
      description: "Indexing response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentsIndexingResponse"

    documentsDeleteResponse:
      description: "Delete response"
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentsDeleteResponse"

    schemaResponse:
      description: "Engine schema."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/schemaData"

    searchSettingsResponse:
      description: "Engine search settings."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/searchSettings"

    synonymSetResponse:
      description: "Synonym set."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/synonymSet"

    synonymSetListResponse:
      description: "Synonym sets list."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/synonymSetListResponse"

    curationResponse:
      description: "Curation."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/curation"

    curationListResponse:
      description: "List of curations."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/curationListResponse"

paths:
  /engines:
    get:
      operationId: listEngines
      summary: TODO
      description: TODO
      tags:
      - Engine API
      requestBody:
        $ref: "#/components/requestBodies/listParamsRequest"
      x-codegen-request-body-name: params
      responses:
        default:
          $ref: "#/components/responseBodies/engineListResponse"
    post:
      operationId: createEngine
      summary: TODO
      description: TODO
      tags:
      - Engine API
      requestBody:
        $ref: "#/components/requestBodies/engineRequest"
      responses:
        default:
          $ref: "#/components/responseBodies/engineResponse"

  /engines/{engine_name}:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: getEngine
      summary: TODO
      description: TODO
      tags:
      - Engine API
      responses:
        default:
          $ref: "#/components/responseBodies/engineResponse"
    delete:
      operationId: deleteEngine
      summary: TODO
      description: TODO
      tags:
      - Engine API
      responses:
        default:
          $ref: "#/components/responseBodies/jsonResponse"

  /engines/{engine_name}/documents:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: getDocuments
      summary: TODO
      description: TODO
      tags:
      - Documents API
      requestBody:
        $ref: "#/components/requestBodies/documentIdsRequest"
      x-codegen-request-body-name: documentIds
      responses:
        default:
          $ref: "#/components/responseBodies/documentListResponse"
    post:
      operationId: indexDocuments
      summary: TODO
      description: TODO
      tags:
      - Documents API
      requestBody:
        $ref: "#/components/requestBodies/documentListRequest"
      x-codegen-request-body-name: documents
      responses:
        default:
          $ref: "#/components/responseBodies/documentsIndexingResponse"
    patch:
      operationId: updateDocuments
      summary: TODO
      description: TODO
      tags:
      - Documents API
      requestBody:
        $ref: "#/components/requestBodies/documentListRequest"
      x-codegen-request-body-name: documents
      responses:
        default:
          $ref: "#/components/responseBodies/documentsIndexingResponse"
    delete:
      operationId: deleteDocuments
      summary: TODO
      description: TODO
      tags:
      - Documents API
      requestBody:
        $ref: "#/components/requestBodies/documentIdsRequest"
      x-codegen-request-body-name: documentIds
      responses:
        default:
          $ref: "#/components/responseBodies/documentsDeleteResponse"

  /engines/{engine_name}/documents/list:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: listDocuments
      summary: TODO
      description: TODO
      tags:
      - Documents API
      requestBody:
        $ref: "#/components/requestBodies/listParamsRequest"
      x-codegen-request-body-name: params
      responses:
        default:
          $ref: "#/components/responseBodies/documentListResponse"

  /engines/{engine_name}/search:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    post:
      operationId: search
      summary: TODO
      description: TODO
      tags:
      - Schema API
      requestBody:
        $ref: "#/components/requestBodies/searchRequest"
      responses:
        default:
          $ref: "#/components/responseBodies/searchResponse"

  /engines/{engine_name}/schema:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: getSchema
      summary: TODO
      description: TODO
      tags:
      - Schema API
      responses:
        default:
          $ref: "#/components/responseBodies/schemaResponse"
    post:
      operationId: updateSchema
      summary: TODO
      description: TODO
      tags:
      - Schema API
      requestBody:
        $ref: "#/components/requestBodies/schemaRequest"
      x-codegen-request-body-name: schema
      responses:
        default:
          $ref: "#/components/responseBodies/schemaResponse"

  /engines/{engine_name}/search_settings:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: getSearchSettings
      summary: TODO
      description: TODO
      tags:
      - Search settings API
      responses:
        default:
          $ref: "#/components/responseBodies/searchSettingsResponse"
    put:
      operationId: updateSearchSettings
      summary: TODO
      description: TODO
      tags:
      - Search settings API
      requestBody:
        $ref: "#/components/requestBodies/searchSettingsRequest"
      responses:
        default:
          $ref: "#/components/responseBodies/searchSettingsResponse"

  /engines/{engine_name}/search_settings/reset:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    post:
      operationId: resetSearchSettings
      summary: TODO
      description: TODO
      tags:
      - Search settings API
      responses:
        default:
          $ref: "#/components/responseBodies/searchSettingsResponse"

  /engines/{engine_name}/synonyms:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: listSynonyms
      summary: TODO
      description: TODO
      tags:
      - Synonyms API
      requestBody:
        $ref: "#/components/requestBodies/listParamsRequest"
      x-codegen-request-body-name: params
      responses:
        default:
          $ref: "#/components/responseBodies/synonymSetListResponse"
    post:
      operationId: createSynonymSet
      summary: TODO
      description: TODO
      tags:
      - Synonyms API
      requestBody:
        $ref: "#/components/requestBodies/synonymSetRequest"
      responses:
        default:
          $ref: "#/components/responseBodies/synonymSetResponse"

  /engines/{engine_name}/synonyms/{synonym_set_id}:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    - $ref: "#/components/parameters/synonymSetId"
    get:
      operationId: getSynonymSet
      summary: TODO
      description: TODO
      tags:
      - Synonyms API
      responses:
        default:
          $ref: "#/components/responseBodies/synonymSetResponse"
    delete:
      operationId: deleteSynonymSet
      summary: TODO
      description: TODO
      tags:
      - Synonyms API
      responses:
        default:
          $ref: "#/components/responseBodies/jsonResponse"

  /engines/{engine_name}/curations:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: listCurations
      summary: TODO
      description: TODO
      tags:
      - Curations API
      requestBody:
        $ref: "#/components/requestBodies/listParamsRequest"
      x-codegen-request-body-name: params
      responses:
        default:
          $ref: "#/components/requestBodies/curationListResponse"
    post:
      operationId: createCuration
      summary: TODO
      description: TODO
      tags:
      - Curations API
      requestBody:
        $ref: "#/components/requestBodies/curationRequest"
      responses:
        default:
          $ref: "#/components/requestBodies/curationResponse"

  /engines/{engine_name}/curations/{curation_id}:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    - $ref: "#/components/parameters/curationId"
    get:
      operationId: getCuration
      summary: TODO
      description: TODO
      tags:
      - Curations API
      responses:
        default:
          $ref: "#/components/requestBodies/curationResponse"
    put:
      operationId: updateCuration
      summary: TODO
      description: TODO
      tags:
      - Curations API
      requestBody:
        required: true
        $ref: "#/components/requestBodies/curationRequest"
      responses:
        default:
          $ref: "#/components/requestBodies/curationResponse"
    delete:
      operationId: deleteCuration
      summary: TODO
      description: TODO
      tags:
      - Curations API
      responses:
        default:
          $ref: "#/components/responseBodies/jsonResponse"

  /engines/{engine_name}/click:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    post:
      operationId: sendClick
      summary: TODO
      description: TODO
      tags:
      - Click API
      requestBody:
        $ref: "#/components/requestBodies/clickRequest"
      responses:
        default:
          $ref: "#/components/responseBodies/jsonResponse"
