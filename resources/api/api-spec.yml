openapi: 3.0.2

info:
  title: "Swiftype App Search API"
  description: "Swiftype App Search API"
  version: "1.0"

externalDocs:
  url: https://swiftype.com/documentation/app-search

components:
  # Reusable schemas definitions -----------------------------------------------
  schemas:
    simpleObject:
      type: object

    documentId:
      type: string

    documentIds:
      type: array
      items:
        $ref: "#/components/schemas/documentId"

    simpleFieldValue:
      anyOf:
      - type: string
      - type: number

    documentFieldValue:
      anyOf:
      - $ref: "#/components/schemas/simpleFieldValue"
      - type: array
        items:
          $ref: "#/components/schemas/simpleFieldValue"

    document:
      type: object
      required:
      - id
      properties:
        id:
          type: string
      additionalProperties:
        $ref: "#/components/schemas/documentFieldValue"

    documentList:
      type: array
      items:
        $ref: "#/components/schemas/document"

    schemaData:
      type: object
      additionalProperties:
        type: string

    searchBoosts:
      type: object
      #TODO

    searchFields:
      type: object
      additionalProperties:
        type: object
        additionalProperties: false
        properties:
          weight:
            type: integer

    searchSettings:
      type: object
      additionalProperties: false
      properties:
        search_fields:
          $ref: "#/components/schemas/searchFields"
        boosts:
          $ref: "#/components/schemas/searchBoosts"

    searchPageParam:
      type: object
      additionalProperties: false
      properties:
        current:
          type: integer
        size:
          type: integer

    searchRequestParams:
      type: object
      additionalProperties: false
      properties:
        query:
          type: string
        page:
          $ref: "#/components/schemas/searchPageParam"
        filters:
          $ref: "#/components/schemas/simpleObject" #TODO
        facets:
          $ref: "#/components/schemas/simpleObject" #TODO
        search_fields:
          $ref: "#/components/schemas/simpleObject" #TODO
        boost:
          $ref: "#/components/schemas/simpleObject" #TODO
        result_fields:
          $ref: "#/components/schemas/simpleObject" #TODO
        sort:
          $ref: "#/components/schemas/simpleObject" #TODO
        group:
          $ref: "#/components/schemas/simpleObject" #TODO
        analytics:
          $ref: "#/components/schemas/simpleObject" #TODO

    searchRequestList:
      type: array
      items:
        $ref: "#/components/schemas/searchRequestParams"

    synonymList:
      type: array
      minLength: 2
      items:
        type: string

  # Reusable request bodies ----------------------------------------------------
  requestBodies:
    documentIdsRequest:
      required: true
      description: List of document ids.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentIds"

    documentsIndexingRequest:
      required: true
      description: List of document to index.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentList"

    documentsPartialUpdateRequest:
      required: true
      description: List of document to update.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/documentList"

    schemaUpdateRequest:
      required: true
      description: Schema description.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/schemaData"

    searchRequestParams:
      description: Search request parameters.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/searchRequestParams"

    searchSettingsRequest:
      required: true
      description: Search settings.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/searchSettings"

  # Reusable parameters definitions --------------------------------------------
  parameters:
    engineNameParam:
      name: engine_name
      in: path
      description: Name of the engine.
      required: true
      schema:
        type: string

    currentPage:
      name: page.current
      in: query
      description: The page to fetch. Defaults to 1.
      schema:
        type: string
      x-codegen-param-name: currentPage

    pageSize:
      name: page.size
      in: query
      description: The number of results per page.
      schema:
        type: string

    searchQueryText:
      name: query
      in: query
      x-codegen-param-name: queryText
      description: Search query text.
      required: true
      schema:
        type: string

    synonymSetId:
      name: synonym_set_id
      in: path
      description: Synonym set id.
      required: true
      schema:
        type: string

    curationId:
      name: curation_id
      in: path
      description: Curation id.
      required: true
      schema:
        type: string

  # Reusable responses definitions ---------------------------------------------
  responses:
    jsonResponse:
      description: A simple JSON response.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/simpleObject"

paths:
  /engines:
    get:
      operationId: listEngines
      summary: Retrieves all engines with optional pagination support.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/engines#list
      tags:
      - Engine API
      parameters:
      - $ref: "#/components/parameters/currentPage"
      - $ref: "#/components/parameters/pageSize"
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"
    post:
      operationId: createEngine
      summary: Creates a new engine.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/engines#create
      tags:
      - Engine API
      parameters:
      - name: name
        in: query
        required: true
        description: Engine name.
        schema:
          type: string
      - name: language
        in: query
        description: Engine language (null for universal).
        schema:
          type: string
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: getEngine
      summary: Retrieves an engine by name.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/engines#get
      tags:
      - Engine API
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"
    delete:
      operationId: deleteEngine
      summary: Delete an engine by name.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/engines#delete
      tags:
      - Engine API
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}/documents:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: getDocuments
      summary: Retrieves one or more documents by id.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/documents#get
      tags:
      - Documents API
      requestBody:
        $ref: "#/components/requestBodies/documentIdsRequest"
      x-codegen-request-body-name: documentIds
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"
    post:
      operationId: indexDocuments
      summary: Create or update documents.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/documents#create
      tags:
      - Documents API
      requestBody:
        $ref: "#/components/requestBodies/documentsIndexingRequest"
      x-codegen-request-body-name: documents
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"
    patch:
      operationId: updateDocuments
      summary: Partial update of documents.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/documents#partial
      tags:
      - Documents API
      requestBody:
        $ref: "#/components/requestBodies/documentsPartialUpdateRequest"
      x-codegen-request-body-name: documents
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"
    delete:
      operationId: deleteDocuments
      summary: Delete documents by id.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/documents#partial
      tags:
      - Documents API
      requestBody:
        $ref: "#/components/requestBodies/documentIdsRequest"
      x-codegen-request-body-name: documentIds
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}/documents/list:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: listDocuments
      summary: List all available documents with optional pagination support.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/documents#list
      tags:
      - Documents API
      parameters:
      - $ref: "#/components/parameters/currentPage"
      - $ref: "#/components/parameters/pageSize"
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}/schema:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: getSchema
      summary: Retrieve current schema for then engine.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/schema#read
      tags:
      - Schema API
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"
    post:
      operationId: updateSchema
      summary: Update schema for the current engine.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/schema#patch
      tags:
      - Schema API
      requestBody:
        $ref: "#/components/requestBodies/schemaUpdateRequest"
      x-codegen-request-body-name: schema
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}/search:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    post:
      operationId: search
      summary: Allows you to search over, facet and filter your data.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/search
      tags:
      - Schema API
      parameters:
      - $ref: "#/components/parameters/searchQueryText"
      requestBody:
        $ref: "#/components/requestBodies/searchRequestParams"
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}/multi_search:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    post:
      operationId: multiSearch
      summary: Run several search in the same request.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/search#multi
      tags:
      - Schema API
      parameters:
      - name: queries
        in: query
        required: true
        description: Search queries.
        schema:
          $ref: "#/components/schema/searchRequestList"
      x-codegen-request-body-name: queries
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}/search_settings:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: getSearchSettings
      summary: Retrive current search settings for the engine.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/search-settings#show
      tags:
      - Search settings API
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"
    put:
      operationId: updateSearchSettings
      summary: Update search settings for the engine.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/search-settings#update
      tags:
      - Search settings API
      requestBody:
        $ref: "#/components/requestBodies/searchSettingsRequest"
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}/search_settings/reset:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    post:
      operationId: resetSearchSettings
      summary: Reset search settings for the engine.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/search-settings#reset
      tags:
      - Search settings API
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}/synonyms:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: listSynonymSets
      summary: Retrieve available synonym sets for the engine.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/synonyms#get
      tags:
      - Synonyms API
      parameters:
      - $ref: "#/components/parameters/currentPage"
      - $ref: "#/components/parameters/pageSize"
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"
    post:
      operationId: createSynonymSet
      summary: Create a new synonym set.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/synonyms#create
      tags:
      - Synonyms API
      parameters:
      - name: synonyms
        in: query
        required: true
        description: List of synonyms words.
        schema:
          $ref: "#/components/schemas/synonymList"
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}/synonyms/{synonym_set_id}:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    - $ref: "#/components/parameters/synonymSetId"
    get:
      operationId: getSynonymSet
      summary: Retrieve a synonym set by id.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/synonyms#list-one
      tags:
      - Synonyms API
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"
    delete:
      operationId: deleteSynonymSet
      summary: Delete a synonym set by id.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/synonyms#delete
      tags:
      - Synonyms API
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}/curations:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    get:
      operationId: listCurations
      summary: Retrieve available curations for the engine.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/curations#read
      tags:
      - Curations API
      parameters:
      - $ref: "#/components/parameters/currentPage"
      - $ref: "#/components/parameters/pageSize"
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"
    post:
      operationId: createCuration
      summary: Create a new curation.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/curations#create
      tags:
      - Curations API
      parameters:
      - name: queries
        in: query
        required: true
        description: List of affected search queries.
        schema:
          type: array
          items:
            type: string
      - name: promoted
        in: query
        description: List of promoted document ids.
        x-codegen-param-name: promotedDocIds
        schema:
          $ref: "#/components/schemas/documentIds"
      - name: hidden
        in: query
        description: List of hidden document ids.
        x-codegen-param-name: hiddenDocIds
        schema:
          $ref: "#/components/schemas/documentIds"
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}/curations/{curation_id}:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    - $ref: "#/components/parameters/curationId"
    get:
      operationId: getCuration
      summary: Retrieve a curation by id.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/curations#single
      tags:
      - Curations API
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"
    put:
      operationId: updateCuration
      summary: Update an existing curation.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/curations#update
      tags:
      - Curations API
      parameters:
      - name: queries
        in: query
        required: true
        description: List of affected search queries.
        schema:
          type: array
          items:
            type: string
      - name: promoted
        in: query
        description: List of promoted document ids.
        x-codegen-param-name: promotedDocIds
        schema:
          $ref: "#/components/schemas/documentIds"
      - name: hidden
        in: query
        description: List of hidden document ids.
        x-codegen-param-name: hiddenDocIds
        schema:
          $ref: "#/components/schemas/documentIds"
      responses:
        default:
          $ref: "#/components/requestBodies/curationResponse"
    delete:
      operationId: deleteCuration
      summary: Delete a curation by id.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/curations#destroy
      tags:
      - Curations API
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"

  /engines/{engine_name}/click:
    parameters:
    - $ref: "#/components/parameters/engineNameParam"
    post:
      operationId: logClickthrough
      summary: Send data about clicked results.
      externalDocs:
        url: https://swiftype.com/documentation/app-search/api/clickthrough
      tags:
      - Click API
      parameters:
      - name: query
        in: query
        required: true
        description: The query that the user searched with.
        schema:
          type: string
      - name: document_id
        in: query
        required: true
        description: The id of the document that was clicked on.
        schema:
          $ref: "#/components/schemas/documentId"
      - name: request_id
        in: query
        description: The request id returned in the meta tag of a search API response.
        schema:
          type: string
      - name: tags
        in: query
        description: Array of strings representing additional information you wish to track with the clickthrough.
        schema:
          type: array
          items:
            type: string
      responses:
        default:
          $ref: "#/components/responses/jsonResponse"
